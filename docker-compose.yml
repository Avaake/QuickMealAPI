services:
  fastapi_app:
    build:
      context: .
    container_name: fastapi_app
    command: uvicorn main:main_app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - src/.env
    environment:
      APP_CONFIG__MIDD__CORS_ALLOWED_ORIGINS: "${APP_CONFIG__MIDD__CORS_ALLOWED_ORIGINS}"
      APP_CONFIG__DB__POSTGRES_USER: "${APP_CONFIG__DB__POSTGRES_USER}"
      APP_CONFIG__DB__POSTGRES_PASSWORD: "${APP_CONFIG__DB__POSTGRES_PASSWORD}"
      APP_CONFIG__DB__POSTGRES_HOST: "${APP_CONFIG__DB__POSTGRES_HOST}"
      APP_CONFIG__DB__POSTGRES_PORT: "${APP_CONFIG__DB__POSTGRES_PORT}"
      APP_CONFIG__DB__POSTGRES_DB: "${APP_CONFIG__DB__POSTGRES_DB}"
      APP_CONFIG__DB__ECHO: "${APP_CONFIG__DB__ECHO}"
      APP_CONFIG__AUTH_JWT__ACCESS_TOKEN_EXPIRE_DAY: "${APP_CONFIG__AUTH_JWT__ACCESS_TOKEN_EXPIRE_DAY}"
      APP_CONFIG__AUTH_JWT__REFRESH_TOKEN_EXPIRE_DAY: "${APP_CONFIG__AUTH_JWT__REFRESH_TOKEN_EXPIRE_DAY}"
      APP_CONFIG__AUTH_JWT__ALGORITHM: "${APP_CONFIG__AUTH_JWT__ALGORITHM}"
      APP_CONFIG__MODE: "${APP_CONFIG__MODE}"
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app

  postgres_db:
    image: postgres:16
    container_name: quick_meat_db
    env_file:
      - src/.env
    environment:
      POSTGRES_USER: "${APP_CONFIG__DB__POSTGRES_USER}"
      POSTGRES_PASSWORD: "${APP_CONFIG__DB__POSTGRES_PASSWORD}"
      POSTGRES_DB: "${APP_CONFIG__DB__POSTGRES_DB}"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d quick_meat_db" ]
      timeout: 5s
      interval: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: