name: CI - Test

on:
  push:
    branches: ["main"]  # Запуск тестів при пуші в гілку main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2

    - name: Copy .test.env to .env
      run: cp src/.test.env .env

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose


    - name: Build and start Docker Compose services
      run: |
        docker-compose -f docker-compose.test.yml --env-file src/.test.env up --build -d

#    - name: Run PostgreSQL container
#      run: docker-compose -f docker-compose.test.yml --env-file src/.test.env up -d postgres_db_test
#      run: |
#        docker run -d \
#        --name postgres_db_test \
#        -e POSTGRES_USER=admin_test \
#        -e POSTGRES_PASSWORD=admin_password_test \
#        -e POSTGRES_DB=quick_meat_db_test \
#        -p 5432:5432 \
#        postgres:16

    - name: Check container status
      run: docker ps

    - name: logs quick_meat_db_test container status
      run: docker logs quick_meat_db_test

    - name: logs fastapi_test_app container status
      run: docker logs fastapi_test_app

#    - name: Run bash in container
#      run: |
#        docker exec fastapi_test_app /bin/bash -c "ls"


    - name: Wait for PostgreSQL to be ready
      run: |
        until docker exec quick_meat_db_test pg_isready -U admin_test; do
          echo "Waiting for postgres to be ready..."
          sleep 5
        done

#    - name: Run tests
#      run: |
#        docker-compose -f docker-compose.test.yml --env-file src/.test.env exec fastapi_test_app pytest -s -vvv
#
#    - name: Tear down Docker Compose services
#      if: always()
#      run: |
#        docker-compose -f docker-compose.test.yml --env-file src/.test.env down